from aiogram.types import InlineKeyboardButton, ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup
from aiogram.utils.keyboard import InlineKeyboardBuilder, ReplyKeyboardBuilder

# --- USER STATES ---
# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–π –∫–Ω–æ–ø–æ–∫ –ø–æ telegram_id
user_states = {}


# --- INLINE KEYBOARD FOR EACH USER ---
async def main_inline(telegram_id):
    keyboard = InlineKeyboardBuilder()
    for key, state in user_states[telegram_id].items():
        text = f'‚úÖ {key}' if state else key
        keyboard.add(InlineKeyboardButton(text=text, callback_data=key))

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª–∞ –ª–∏ –Ω–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ "–Ü–Ω—à–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç"
    another_selected = user_states[telegram_id].get("another_selected", False)
    another_text = "‚úÖ –Ü–Ω—à–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç" if another_selected else "–Ü–Ω—à–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç"
    keyboard.add(InlineKeyboardButton(text=another_text, callback_data='another'))

    keyboard.add(InlineKeyboardButton(text="–î–∞–ª—ñ", callback_data='next'))
    return keyboard.adjust(1).as_markup()


async def next_kb():
    keyboard = InlineKeyboardBuilder()
    keyboard.add(InlineKeyboardButton(text="–î–∞–ª—ñ", callback_data='next'))
    return keyboard.adjust(1).as_markup()

# Keyboards for every category of vacnacies
e_cat_kb = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–ì–æ—Ç–µ–ª—å–Ω–æ-—Ä–µ—Å—Ç–æ—Ä–∞–Ω–Ω–∏–π –±—ñ–∑–Ω–µ—Å', callback_data='hr')],
    [InlineKeyboardButton(text='IT', callback_data='it')],
    [InlineKeyboardButton(text='–§—ñ–Ω–∞–Ω—Å–∏, –±–∞–Ω–∫', callback_data='fin')],
    [InlineKeyboardButton(text='–ë—É—Ö–≥–∞–ª—Ç–µ—Ä—ñ—è, –∞—É–¥–∏—Ç', callback_data='bukh')],
    [InlineKeyboardButton(text='–°–≤—ñ–π –≤–∞—Ä—ñ–∞–Ω—Ç', callback_data='cat_an')]
])

e_char_kb = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–û–Ω–ª–∞–π–Ω', callback_data='on')],
    [InlineKeyboardButton(text='–û—Ñ–ª–∞–π–Ω', callback_data='of')]
])

e_dur_kb = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–û–¥–Ω–æ—Ä–∞–∑–æ–≤–∞/–ø—Ä–æ–µ–∫—Ç–Ω–∞ —Ä–æ–±–æ—Ç–∞', callback_data='one_time')],
    [InlineKeyboardButton(text='1-3 –º—ñ—Å—è—Ü—ñ', callback_data='1-3')],
    [InlineKeyboardButton(text='3-6 –º—ñ—Å—è—Ü—ñ–≤', callback_data='3-6')],
    [InlineKeyboardButton(text='>6 –º—ñ—Å—è—Ü—ñ–≤', callback_data='>6')]
])

e_exp_kb = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–ë–µ–∑ –¥–æ—Å–≤—ñ–¥—É', callback_data='no_exp')],
    [InlineKeyboardButton(text='–º–µ–Ω—à–µ 6 –º—ñ—Å—è—Ü—ñ–≤', callback_data='less_6')],
    [InlineKeyboardButton(text='–±—ñ–ª—å—à–µ 6 –º—ñ—Å—è—Ü—ñ–≤', callback_data='more_6')],
    [InlineKeyboardButton(text='–±—ñ–ª—å—à–µ 1 —Ä–æ–∫—É', callback_data='more_1')]
])

e_sal_kb = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–í –≥—Ä–∏–≤–Ω—è—Ö', callback_data='uah')],
    [InlineKeyboardButton(text='–í –¥–æ–ª–∞—Ä–∞—Ö', callback_data='usd')]
])

s_cat_kb = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–ì–æ—Ç–µ–ª—å–Ω–æ-—Ä–µ—Å—Ç–æ—Ä–∞–Ω–Ω–∏–π –±—ñ–∑–Ω–µ—Å', callback_data='s_hr')],
    [InlineKeyboardButton(text='IT', callback_data='s_it')],
    [InlineKeyboardButton(text='–§—ñ–Ω–∞–Ω—Å–∏, –±–∞–Ω–∫', callback_data='s_fin')],
    [InlineKeyboardButton(text='–ë—É—Ö–≥–∞–ª—Ç–µ—Ä—ñ—è, –∞—É–¥–∏—Ç', callback_data='s_bukh')],
    [InlineKeyboardButton(text='–°–≤—ñ–π –≤–∞—Ä—ñ–∞–Ω—Ç', callback_data='s_cat_an')]
])

s_char_kb = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–û–Ω–ª–∞–π–Ω', callback_data='s_on')],
    [InlineKeyboardButton(text='–û—Ñ–ª–∞–π–Ω', callback_data='s_of')]
])

s_dur_kb = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–û–¥–Ω–æ—Ä–∞–∑–æ–≤–∞/–ø—Ä–æ–µ–∫—Ç–Ω–∞ —Ä–æ–±–æ—Ç–∞', callback_data='s_one_time')],
    [InlineKeyboardButton(text='1-3 –º—ñ—Å—è—Ü—ñ', callback_data='s_1-3')],
    [InlineKeyboardButton(text='3-6 –º—ñ—Å—è—Ü—ñ–≤', callback_data='s_3-6')],
    [InlineKeyboardButton(text='>6 –º—ñ—Å—è—Ü—ñ–≤', callback_data='s_>6')]
])

s_exp_kb = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–ë–µ–∑ –¥–æ—Å–≤—ñ–¥—É', callback_data='s_no_exp')],
    [InlineKeyboardButton(text='–º–µ–Ω—à–µ 6 –º—ñ—Å—è—Ü—ñ–≤', callback_data='s_less_6')],
    [InlineKeyboardButton(text='–±—ñ–ª—å—à–µ 6 –º—ñ—Å—è—Ü—ñ–≤', callback_data='s_more_6')],
    [InlineKeyboardButton(text='–±—ñ–ª—å—à–µ 1 —Ä–æ–∫—É', callback_data='s_more_1')]
])

s_sal_kb = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–î–æ 10 000 –≥—Ä–Ω.', callback_data='s_less_10')],
    [InlineKeyboardButton(text='–í—ñ–¥ 10 000 –¥–æ 40 000 –≥—Ä–Ω.', callback_data='s_10-40')],
    [InlineKeyboardButton(text='–±—ñ–ª—å—à–µ 40 000 –≥—Ä–Ω.', callback_data='s_more_40')]
])

search_kb = ReplyKeyboardMarkup(keyboard=[[KeyboardButton(text='–®–£–ö–ê–¢–ò')]],
                                resize_keyboard=True, input_field_placeholder='–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é')

def vac_kb(exp: str, fav: str):
    keyboard = InlineKeyboardBuilder()
    keyboard.add(InlineKeyboardButton(text=exp, callback_data='vac_exp'))
    keyboard.add(InlineKeyboardButton(text=fav, callback_data='vac_fav'))
    return keyboard.adjust(1).as_markup()


s_menu_kb = ReplyKeyboardMarkup(keyboard=[
    [KeyboardButton(text='üîé –®—É–∫–∞—Ç–∏ —Ä–æ–±–æ—Ç—É'),
     KeyboardButton(text='‚ù§Ô∏è –ó–±–µ—Ä–µ–∂–µ–Ω—ñ –≤–∞–∫–∞–Ω—Å—ñ—ó')],
    [KeyboardButton(text='üíº –û–ø—É–±–ª—ñ–∫—É–≤–∞—Ç–∏ –≤–∞–∫–∞–Ω—Å—ñ—é')]
],
    resize_keyboard=True)

trash_kb = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='üóë', callback_data='trash')]
])

yes_no_kb = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–¢–∞–∫', callback_data='yes')],
    [InlineKeyboardButton(text='–ù—ñ', callback_data='no')]
])

emp_srch_kb = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–Ø —à—É–∫–∞—é —Ä–æ–±–æ—Ç—É', callback_data='srch')],
    [InlineKeyboardButton(text='–Ø —à—É–∫–∞—é –ø—Ä–∞—Ü—ñ–≤–Ω–∏–∫–∞', callback_data='emp')]
])
